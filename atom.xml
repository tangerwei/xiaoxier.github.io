<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>web前端</title>
  <subtitle>WEB</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaoxier.github.io/"/>
  <updated>2016-05-28T08:27:10.000Z</updated>
  <id>https://xiaoxier.github.io/</id>
  
  <author>
    <name>龙儿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://xiaoxier.github.io/2011/11/15/return/"/>
    <id>https://xiaoxier.github.io/2011/11/15/return/</id>
    <published>2011-11-14T16:00:00.000Z</published>
    <updated>2016-05-28T08:27:10.000Z</updated>
    
    <content type="html">&lt;p&gt; renturn&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一、renturn 表达式；语句结束函数执行，返回调用函数，表达式的值作为函数的结果。&lt;/p&gt;
&lt;p&gt;二、return：返回值&lt;/p&gt;
&lt;p&gt;1）fn1() ==&amp;gt; return 后面的值；匿名函数返回函数代码块。&lt;/p&gt;
&lt;p&gt;2）如果没有写return，所有函数默认返回值：未定义；&lt;/p&gt;
&lt;p&gt;3）return只能有一个返回值，同时跳出函数，不再执行代码。&lt;/p&gt;
&lt;p&gt;3）可以控制函数体中的代码执行到指定就结束&lt;/p&gt;
&lt;p&gt;三、return作用&lt;/p&gt;
&lt;p&gt;return false；1.阻止默认事件行为。终止符；2.return false 只在当前函数有效，不会影响其他外部函数的执行。&lt;/p&gt;
&lt;p&gt;return true；执行符&lt;/p&gt;
&lt;p&gt;return；     把控制权返回给页面&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; renturn&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://xiaoxier.github.io/2011/11/12/answer/"/>
    <id>https://xiaoxier.github.io/2011/11/12/answer/</id>
    <published>2011-11-11T16:00:00.000Z</published>
    <updated>2016-05-28T08:26:20.000Z</updated>
    
    <content type="html">&lt;p&gt; 经典题目&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;如果大家觉得自己JS很牛的话，不妨来试试&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;1.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return typeof arguments;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;答案：’object’&lt;br&gt;arguments 是对象，虽然像数组&lt;br&gt;2.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var f = function g()&amp;#123; return 23; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typeof g();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;答案：Error&lt;br&gt;g未定义。&lt;br&gt;在 JS 里，声明函数只有 2 种方法：&lt;br&gt;第 1 种： function foo(){…} （函数声明）&lt;br&gt;第 2 种： var foo = function(){…} （等号后面必须是匿名函数，这句实质是函数表达式）&lt;/p&gt;
&lt;p&gt;除此之外，类似于 var foo = function bar(){…} 这样的东西统一按 2 方法处理，即在函数外部无法通过 bar 访问到函数，因为这已经变成了一个表达式。&lt;/p&gt;
&lt;p&gt;但为什么不是 “undefined”？&lt;br&gt;这里如果求 typeof g ，会返回 undefined，但求的是 g()，所以会去先去调用函数 g，这里就会直接抛出异常，所以是 Error。&lt;br&gt;3.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(function(x)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delete x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(1);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;答案;1&lt;br&gt;delete操作符用于删除对象的成员变量，不能删除函数的参数&lt;br&gt;4.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var y = 1, x = y = typeof x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;答案：‘undefined’&lt;br&gt;先定义了y并赋值为1，然后typeof赋值给y，此时x未定义，故为‘undefined’，最后将y的值赋给x&lt;br&gt;5.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(function f(f)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return typeof f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(function()&amp;#123; return 1; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;答案：‘number’&lt;br&gt;在函数里的f（）其实是参数的那个f的执行结果，所以是typeof 1，也就是‘number’&lt;br&gt;6.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var foo = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar: function() &amp;#123; return this.baz; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baz: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return typeof arguments[0]();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(foo.bar);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;答案：‘undefined’&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; 经典题目&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://xiaoxier.github.io/2011/11/11/hell/"/>
    <id>https://xiaoxier.github.io/2011/11/11/hell/</id>
    <published>2011-11-10T16:00:00.000Z</published>
    <updated>2016-05-28T08:28:02.000Z</updated>
    
    <content type="html">&lt;p&gt;  hexo&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;  搭建Github静态博客&lt;/p&gt;
&lt;h1 id=&quot;1-环境&quot;&gt;&lt;a href=&quot;#1-环境&quot; class=&quot;headerlink&quot; title=&quot;1.环境&quot;&gt;&lt;/a&gt;1.环境&lt;/h1&gt;&lt;h2 id=&quot;1-1安装Git&quot;&gt;&lt;a href=&quot;#1-1安装Git&quot; class=&quot;headerlink&quot; title=&quot;1.1安装Git&quot;&gt;&lt;/a&gt;1.1安装Git&lt;/h2&gt;&lt;p&gt;请参考【1】&lt;/p&gt;
&lt;h2 id=&quot;1-2安装node-js&quot;&gt;&lt;a href=&quot;#1-2安装node-js&quot; class=&quot;headerlink&quot; title=&quot;1.2安装node.js&quot;&gt;&lt;/a&gt;1.2安装node.js&lt;/h2&gt;&lt;p&gt;下载：&lt;a href=&quot;http://nodejs.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nodejs.org/download/&lt;/a&gt;&lt;br&gt;安装时直接保持默认配置即可&lt;/p&gt;
&lt;h1 id=&quot;2-配置Github&quot;&gt;&lt;a href=&quot;#2-配置Github&quot; class=&quot;headerlink&quot; title=&quot;2.配置Github&quot;&gt;&lt;/a&gt;2.配置Github&lt;/h1&gt;&lt;h2 id=&quot;1-1建立Repository&quot;&gt;&lt;a href=&quot;#1-1建立Repository&quot; class=&quot;headerlink&quot; title=&quot;1.1建立Repository&quot;&gt;&lt;/a&gt;1.1建立Repository&lt;/h2&gt;&lt;p&gt;建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】&lt;/p&gt;
&lt;h2 id=&quot;1-2配置SSH-Key&quot;&gt;&lt;a href=&quot;#1-2配置SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;1.2配置SSH-Key&quot;&gt;&lt;/a&gt;1.2配置SSH-Key&lt;/h2&gt;&lt;p&gt;参考【1】&lt;/p&gt;
&lt;h1 id=&quot;3-安装hexo&quot;&gt;&lt;a href=&quot;#3-安装hexo&quot; class=&quot;headerlink&quot; title=&quot;3.安装hexo&quot;&gt;&lt;/a&gt;3.安装hexo&lt;/h1&gt;&lt;p&gt;关于Hexotic的安装配置过程，请以官方Hexo【2】给出的步骤为准。&lt;/p&gt;
&lt;h2 id=&quot;3-1Installation&quot;&gt;&lt;a href=&quot;#3-1Installation&quot; class=&quot;headerlink&quot; title=&quot;3.1Installation&quot;&gt;&lt;/a&gt;3.1Installation&lt;/h2&gt;&lt;p&gt;打开Git命令行，执行如下命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-2-Qucik-Start&quot;&gt;&lt;a href=&quot;#3-2-Qucik-Start&quot; class=&quot;headerlink&quot; title=&quot;3.2 Qucik Start&quot;&gt;&lt;/a&gt;3.2 Qucik Start&lt;/h2&gt;&lt;h6 id=&quot;1-Setup-your-blog&quot;&gt;&lt;a href=&quot;#1-Setup-your-blog&quot; class=&quot;headerlink&quot; title=&quot;1. Setup your blog&quot;&gt;&lt;/a&gt;1. Setup your blog&lt;/h6&gt;&lt;p&gt;在电脑中建立一个名字叫「Hexo」的文件夹（比如我建在了D:\Hexo），然后在此文件夹中右键打开Git Bash。执行下面的命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] Copying data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] You are almost done! Don&amp;apos;t forget to run `npm install` before you start b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging with Hexo!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Hexo随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行 npm install（在 /D/Hexo下）&lt;/p&gt;
&lt;p&gt;会在D:\Hexo目录中安装 node_modules。&lt;/p&gt;
&lt;h6 id=&quot;2-Start-the-server&quot;&gt;&lt;a href=&quot;#2-Start-the-server&quot; class=&quot;headerlink&quot; title=&quot;2.Start the server&quot;&gt;&lt;/a&gt;2.Start the server&lt;/h6&gt;&lt;p&gt;运行下面的命令（在 /D/Hexo下）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;表明Hexo Server已经启动了，在浏览器中打开 &lt;a href=&quot;http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你可以按Ctrl+C 停止Server。&lt;/p&gt;
&lt;h6 id=&quot;3-Creat-a-new-post&quot;&gt;&lt;a href=&quot;#3-Creat-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;3.Creat a new post&quot;&gt;&lt;/a&gt;3.Creat a new post&lt;/h6&gt;&lt;p&gt;新打开一个git bash命令行窗口，cd到/D/Hexo下，执行下面的命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] File created at d:\Hexo\source\_posts\My-New-Post.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;刷新&lt;a href=&quot;http://localhost:4000/，可以发现已生成了一篇新文章&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/，可以发现已生成了一篇新文章&lt;/a&gt; “My New Post”。&lt;/p&gt;
&lt;h4 id=&quot;Note：&quot;&gt;&lt;a href=&quot;#Note：&quot; class=&quot;headerlink&quot; title=&quot;Note：&quot;&gt;&lt;/a&gt;Note：&lt;/h4&gt;&lt;p&gt;有一个问题，发现 “My New Post” 被发了2遍，在Hexo server所在的git bash窗口也能看到create了2次。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[create] d:\Hexo\source\_posts\My-New-Post.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[create] d:\Hexo\source\_posts\My-New-Post.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Have-Fun&quot;&gt;&lt;a href=&quot;#Have-Fun&quot; class=&quot;headerlink&quot; title=&quot;Have Fun!!!&quot;&gt;&lt;/a&gt;Have Fun!!!&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;  hexo&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
